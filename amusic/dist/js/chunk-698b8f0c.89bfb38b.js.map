{"version":3,"sources":["webpack:///./src/views/Singerdetail.vue?97fa","webpack:///./src/views/Singerdetail.vue?140a","webpack:///src/views/Singerdetail.vue","webpack:///./src/views/Singerdetail.vue?3739","webpack:///./src/views/Singerdetail.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","on","back","style","artist","img1v1Url","_v","_s","name","musicSize","staticStyle","followed","model","value","callback","$$v","active","expression","_l","item","index","key","$event","togglePlayPage","v","songListData","hotSongs","id","songUrlData","isAlia","alia","art","al","mv","_e","briefDesc","allPlayList","length","picUrl","pt","size","imgurl","playcount","publishTime","staticRenderFns","allVideoData","allSongs","similarArtistsData","allSongUrlData","getInfoById","$route","query","getAllSongById","getPlayListById","getSimilarArtists","getAllVideoById","methods","setTimeout","$router","go","save","join","$toast","loading","type","message","forbidClick","duration","loadingType","axios","url","params","cookie","utils","order","limit","$store","commit","component"],"mappings":"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","file":"js/chunk-698b8f0c.89bfb38b.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Singerdetail.vue?vue&type=style&index=0&id=88a35218&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Singerdetail.vue?vue&type=style&index=0&id=88a35218&lang=less&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"singerdetail\"},[_c('div',[_c('van-nav-bar',{attrs:{\"left-arrow\":\"\",\"fixed\":\"\"},on:{\"click-left\":_vm.back}})],1),_c('div',{staticClass:\"bg\",style:('background-image:url(' + _vm.artist.img1v1Url + ')')}),_c('div',{staticClass:\"content-box\"},[_c('div',{staticClass:\"clearfix singer-info-box\"},[_c('div',{staticClass:\"fl singer-info\"},[_c('div',{staticClass:\"singer-name\"},[_vm._v(_vm._s(_vm.artist.name))]),_c('div',{staticClass:\"singer-fans\"},[_vm._v(\"单曲数 \"+_vm._s(_vm.artist.musicSize))])]),_c('div',{staticClass:\"fr btn-sub\"},[_c('van-button',{staticStyle:{\"padding\":\"0 20px\"},attrs:{\"round\":\"\",\"color\":\"#e4393c\",\"disabled\":_vm.artist.followed ? true : false}},[_vm._v(_vm._s(!_vm.artist.followed ? \"+ 关注\" : \"已关注\"))])],1)]),_c('div',{staticClass:\"content-item\"},[_c('van-tabs',{attrs:{\"background\":\"rgba(21,21,21,1)\",\"color\":\"#e4393c\",\"title-inactive-color\":\"#fff\",\"title-active-color\":\"#e4393c\"},model:{value:(_vm.active),callback:function ($$v) {_vm.active=$$v},expression:\"active\"}},[_c('van-tab',{attrs:{\"title\":\"主页\"}},[_c('div',{staticClass:\"hot-box\"},[_c('div',{staticClass:\"hot-box-title \"},[_vm._v(\"近期热门(10首)\")]),_vm._l((_vm.hotSongs),function(item,index){return _c('div',{key:index,staticClass:\"clearfix songlist-item\"},[_c('div',{staticClass:\"fl songlist-count\",style:(index >= 99 ? 'font-size:16px' : '')},[_vm._v(\" \"+_vm._s(index + 1)+\" \")]),_c('div',{staticClass:\"fl songlist-item-detail\",staticStyle:{\"height\":\"40px\"},on:{\"click\":function($event){return _vm.togglePlayPage({\n                    v: true,\n                    songListData: _vm.hotSongs,\n                    id: item.id,\n                    songUrlData: _vm.songUrlData,\n                    index: index,\n                  })}}},[_c('div',{staticClass:\"song-name\"},[_vm._v(\" \"+_vm._s(item.name)+_vm._s(item.isAlia ? \"(\" + item.alia[0] + \")\" : \"\")+\" \")]),_c('div',{staticClass:\"song-singer\"},[_vm._v(\" \"+_vm._s(item.art)+\" - \"+_vm._s(item.al.name)+\" \")])]),_c('div',{staticClass:\"fr icon-box\"},[_c('div',{staticClass:\"tv-icon\"},[(item.mv != 0)?_c('van-icon',{attrs:{\"name\":\"video-o\"}}):_vm._e()],1),_c('div',{staticClass:\"function-icon\"},[_c('van-icon',{attrs:{\"name\":\"bars\"}})],1)])])})],2),_c('div',{staticClass:\"singer-introduction\"},[_c('div',{staticClass:\"singer-introduction-title\"},[_vm._v(\" 歌手简介 \")]),_c('div',{staticClass:\"singer-introduction-content\"},[_vm._v(\" \"+_vm._s(_vm.artist.briefDesc)+\" \")])]),_c('div',{staticClass:\"similar-artists\"},[_c('div',{staticClass:\"similar-artists-title\"},[_vm._v(\" 相似艺人 \")]),_c('div',{staticClass:\"similar-artists-box clearfix\"},_vm._l((_vm.similarArtistsData),function(item,index){return _c('div',{key:index,staticClass:\"similar-artists-item fl\"},[_c('div',{staticClass:\"s-a-img\"},[_c('div',{style:('background-image:url(' + item.img1v1Url + ')')})]),_c('div',{staticClass:\"s-a-name\"},[_vm._v(_vm._s(item.name))]),_c('div',{staticClass:\"s-a-fans\"},[_vm._v(\"单曲数\"+_vm._s(item.musicSize))]),_c('div',{staticClass:\"s-a-sub\"},[_c('van-button',{staticStyle:{\"padding\":\"0 20px\"},attrs:{\"round\":\"\",\"size\":\"small\",\"color\":\"#e4393c\",\"disabled\":item.followed ? true : false}},[_vm._v(_vm._s(!item.followed ? \"+ 关注\" : \"已关注\"))])],1)])}),0)])]),_c('van-tab',{attrs:{\"title\":\"歌曲\"}},[_c('div',[_vm._v(\"暂时拿50首\")]),_c('div',{staticClass:\"all-song-box\"},_vm._l((_vm.allSongs),function(item,index){return _c('div',{key:index,staticClass:\"clearfix songlist-item\"},[_c('div',{staticClass:\"fl songlist-count\",style:(index >= 99 ? 'font-size:16px' : '')},[_vm._v(\" \"+_vm._s(index + 1)+\" \")]),_c('div',{staticClass:\"fl songlist-item-detail\",staticStyle:{\"height\":\"40px\"},on:{\"click\":function($event){return _vm.togglePlayPage({\n                    v: true,\n                    songListData: _vm.hotSongs,\n                    id: item.id,\n                    songUrlData: _vm.songUrlData,\n                    index: index,\n                  })}}},[_c('div',{staticClass:\"song-name\"},[_vm._v(\" \"+_vm._s(item.name)+_vm._s(item.isAlia ? \"(\" + item.alia[0] + \")\" : \"\")+\" \")]),_c('div',{staticClass:\"song-singer\"},[_vm._v(\" \"+_vm._s(item.art)+\" - \"+_vm._s(item.al.name)+\" \")])]),_c('div',{staticClass:\"fr icon-box\"},[_c('div',{staticClass:\"tv-icon\"},[(item.mv != 0)?_c('van-icon',{attrs:{\"name\":\"video-o\"}}):_vm._e()],1),_c('div',{staticClass:\"function-icon\"},[_c('van-icon',{attrs:{\"name\":\"bars\"}})],1)])])}),0)]),_c('van-tab',{attrs:{\"title\":'专辑(' + _vm.allPlayList.length + ')'}},[_c('div',[_vm._v(\"留着排序\")]),_vm._l((_vm.allPlayList),function(item,index){return _c('div',{key:index,staticClass:\"album-box\"},[_c('div',{staticClass:\"album-item goFlex\"},[_c('div',{staticClass:\"album-img\",style:('background-image:url(' + item.picUrl + ')')}),_c('div',{staticClass:\"album-info\"},[_c('div',{staticClass:\"album-name\"},[_vm._v(_vm._s(item.name))]),_c('div',{staticClass:\"goFlex\"},[_c('div',{staticClass:\"album-date\"},[_vm._v(_vm._s(item.pt))]),_c('div',{staticClass:\"album-count\"},[_vm._v(_vm._s(item.size)+\"首\")])])])])])})],2),_c('van-tab',{attrs:{\"title\":\"视频\"}},[_c('div',[_vm._v(\"有拿mv和视频两种\")]),_c('div',{staticClass:\"video-box\"},_vm._l((_vm.allVideoData),function(item,index){return _c('div',{key:index,staticClass:\"video-item goFlex\"},[_c('div',{staticClass:\"video-img\",style:('background-image:url(' + item.imgurl + ')')},[_c('div',{staticClass:\"video-play-count goFlex\"},[_c('van-icon',{attrs:{\"name\":\"play-circle-o\"}}),_vm._v(_vm._s(item.playcount)+\" \")],1)]),_c('div',{staticClass:\"video-info\"},[_c('div',{staticClass:\"video-name\"},[_vm._v(_vm._s(item.name))]),_c('div',{staticClass:\"video-date\"},[_vm._v(_vm._s(item.publishTime))])])])}),0)])],1)],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"singerdetail\">\r\n    <!-- 导航 右上角可以打开popup=>再说吧 -->\r\n    <div>\r\n      <van-nav-bar left-arrow @click-left=\"back\" fixed> </van-nav-bar>\r\n    </div>\r\n    <!-- 背景 -->\r\n    <!-- img1v1Url -->\r\n    <div\r\n      class=\"bg\"\r\n      :style=\"'background-image:url(' + artist.img1v1Url + ')'\"\r\n    ></div>\r\n    <!-- 内容 -->\r\n    <div class=\"content-box\">\r\n      <!-- 名称 粉丝数 关注 -->\r\n      <div class=\"clearfix singer-info-box\">\r\n        <div class=\"fl singer-info\">\r\n          <div class=\"singer-name\">{{ artist.name }}</div>\r\n          <div class=\"singer-fans\">单曲数 {{ artist.musicSize }}</div>\r\n        </div>\r\n        <div class=\"fr btn-sub\">\r\n          <van-button\r\n            round\r\n            style=\"padding:0 20px\"\r\n            color=\"#e4393c\"\r\n            :disabled=\"artist.followed ? true : false\"\r\n            >{{ !artist.followed ? \"+ 关注\" : \"已关注\" }}</van-button\r\n          >\r\n        </div>\r\n      </div>\r\n      <!-- 主要内容 -->\r\n      <div class=\"content-item\">\r\n        <van-tabs\r\n          v-model=\"active\"\r\n          background=\"rgba(21,21,21,1)\"\r\n          color=\"#e4393c\"\r\n          title-inactive-color=\"#fff\"\r\n          title-active-color=\"#e4393c\"\r\n        >\r\n          <van-tab title=\"主页\">\r\n            <!-- 近期热门 -->\r\n            <div class=\"hot-box\">\r\n              <div class=\"hot-box-title \">近期热门(10首)</div>\r\n              <div\r\n                class=\"clearfix songlist-item\"\r\n                v-for=\"(item, index) in hotSongs\"\r\n                :key=\"index\"\r\n              >\r\n                <div\r\n                  class=\"fl songlist-count\"\r\n                  :style=\"index >= 99 ? 'font-size:16px' : ''\"\r\n                >\r\n                  {{ index + 1 }}\r\n                </div>\r\n                <!-- 歌曲信息 -->\r\n                <div\r\n                  class=\"fl songlist-item-detail\"\r\n                  style=\"height:40px\"\r\n                  @click=\"\r\n                    togglePlayPage({\r\n                      v: true,\r\n                      songListData: hotSongs,\r\n                      id: item.id,\r\n                      songUrlData,\r\n                      index,\r\n                    })\r\n                  \"\r\n                >\r\n                  <div class=\"song-name\">\r\n                    {{ item.name\r\n                    }}{{ item.isAlia ? \"(\" + item.alia[0] + \")\" : \"\" }}\r\n                  </div>\r\n                  <div class=\"song-singer\">\r\n                    {{ item.art }} - {{ item.al.name }}\r\n                  </div>\r\n                </div>\r\n                <!-- 图标 -->\r\n                <div class=\"fr icon-box\">\r\n                  <div class=\"tv-icon\">\r\n                    <van-icon name=\"video-o\" v-if=\"item.mv != 0\" />\r\n                  </div>\r\n                  <div class=\"function-icon\">\r\n                    <van-icon name=\"bars\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- 歌手简介 -->\r\n            <div class=\"singer-introduction\">\r\n              <div class=\"singer-introduction-title\">\r\n                歌手简介\r\n              </div>\r\n              <div class=\"singer-introduction-content\">\r\n                {{ artist.briefDesc }}\r\n              </div>\r\n            </div>\r\n            <!-- 相似艺人 -->\r\n            <div class=\"similar-artists\">\r\n              <div class=\"similar-artists-title\">\r\n                相似艺人\r\n              </div>\r\n              <div class=\"similar-artists-box clearfix\">\r\n                <div\r\n                  class=\"similar-artists-item fl\"\r\n                  v-for=\"(item, index) in similarArtistsData\"\r\n                  :key=\"index\"\r\n                >\r\n                  <div class=\"s-a-img\">\r\n                    <div\r\n                      :style=\"'background-image:url(' + item.img1v1Url + ')'\"\r\n                    ></div>\r\n                  </div>\r\n                  <div class=\"s-a-name\">{{ item.name }}</div>\r\n                  <div class=\"s-a-fans\">单曲数{{ item.musicSize }}</div>\r\n                  <div class=\"s-a-sub\">\r\n                    <van-button\r\n                      round\r\n                      style=\"padding:0 20px\"\r\n                      size=\"small\"\r\n                      color=\"#e4393c\"\r\n                      :disabled=\"item.followed ? true : false\"\r\n                      >{{ !item.followed ? \"+ 关注\" : \"已关注\" }}</van-button\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </van-tab>\r\n          <van-tab title=\"歌曲\">\r\n            <!-- 所有歌曲 懒加载？懒加载？懒加载 -->\r\n            <div>暂时拿50首</div>\r\n            <div class=\"all-song-box\">\r\n              <div\r\n                class=\"clearfix songlist-item\"\r\n                v-for=\"(item, index) in allSongs\"\r\n                :key=\"index\"\r\n              >\r\n                <div\r\n                  class=\"fl songlist-count\"\r\n                  :style=\"index >= 99 ? 'font-size:16px' : ''\"\r\n                >\r\n                  {{ index + 1 }}\r\n                </div>\r\n                <!-- 歌曲信息 -->\r\n                <div\r\n                  class=\"fl songlist-item-detail\"\r\n                  style=\"height:40px\"\r\n                  @click=\"\r\n                    togglePlayPage({\r\n                      v: true,\r\n                      songListData: hotSongs,\r\n                      id: item.id,\r\n                      songUrlData,\r\n                      index,\r\n                    })\r\n                  \"\r\n                >\r\n                  <div class=\"song-name\">\r\n                    {{ item.name\r\n                    }}{{ item.isAlia ? \"(\" + item.alia[0] + \")\" : \"\" }}\r\n                  </div>\r\n                  <div class=\"song-singer\">\r\n                    {{ item.art }} - {{ item.al.name }}\r\n                  </div>\r\n                </div>\r\n                <!-- 图标 -->\r\n                <div class=\"fr icon-box\">\r\n                  <div class=\"tv-icon\">\r\n                    <van-icon name=\"video-o\" v-if=\"item.mv != 0\" />\r\n                  </div>\r\n                  <div class=\"function-icon\">\r\n                    <van-icon name=\"bars\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </van-tab>\r\n          <van-tab :title=\"'专辑(' + allPlayList.length + ')'\">\r\n            <div>留着排序</div>\r\n            <div\r\n              class=\"album-box\"\r\n              v-for=\"(item, index) in allPlayList\"\r\n              :key=\"index\"\r\n            >\r\n              <div class=\"album-item goFlex\">\r\n                <div\r\n                  class=\"album-img\"\r\n                  :style=\"'background-image:url(' + item.picUrl + ')'\"\r\n                ></div>\r\n                <div class=\"album-info\">\r\n                  <div class=\"album-name\">{{ item.name }}</div>\r\n                  <div class=\"goFlex\">\r\n                    <div class=\"album-date\">{{ item.pt }}</div>\r\n                    <div class=\"album-count\">{{ item.size }}首</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </van-tab>\r\n          <van-tab title=\"视频\">\r\n            <div>有拿mv和视频两种</div>\r\n            <div class=\"video-box\">\r\n              <div class=\"video-item goFlex\" v-for=\"(item,index) in allVideoData\" :key=\"index\">\r\n                <div class=\"video-img\" :style=\"'background-image:url(' + item.imgurl + ')'\">\r\n                  <div class=\"video-play-count goFlex\" >\r\n                    <van-icon name=\"play-circle-o\" />{{item.playcount}}\r\n                  </div>\r\n                </div>\r\n                <div class=\"video-info\">\r\n                  <!-- <div>MV标志的icon</div> -->\r\n                  <div class=\"video-name\">{{item.name}}</div>\r\n                  <div class=\"video-date\">{{item.publishTime}}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </van-tab>\r\n        </van-tabs>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { utils } from \"../assets/js/utils\";\r\n// 传入歌手 id, 可获得歌手部分信息和热门歌曲 /artists?id=6452\r\nexport default {\r\n  data() {\r\n    return {\r\n      active: 3,\r\n      // 歌手信息\r\n      artist: {},\r\n      // 所有MV的数据\r\n      allVideoData:[],\r\n      // 所有专辑数据\r\n      allPlayList: [],\r\n      // 所有歌曲的数据\r\n      allSongs: [],\r\n      // 热门歌曲 只拿10首\r\n      hotSongs: [],\r\n      // 相似歌手数据 就拿2个\r\n      similarArtistsData: [],\r\n      // 热门歌曲的url\r\n      songUrlData: [],\r\n      // 所有歌曲的url\r\n      allSongUrlData: [],\r\n    };\r\n  },\r\n  created() {\r\n    // 这个id是歌手id\r\n    // 获取歌手信息和热门歌曲\r\n    this.getInfoById(this.$route.query.id);\r\n    // 获取歌手所有歌曲  => 测试完成后修改成 点了才激活\r\n    this.getAllSongById(this.$route.query.id);\r\n    // 获取歌手所有传记  => 测试完成后修改成 点了才激活\r\n    this.getPlayListById(this.$route.query.id);\r\n    // 获取相似歌手\r\n    this.getSimilarArtists(this.$route.query.id);\r\n    // 获取全部mv\r\n    this.getAllVideoById(this.$route.query.id)\r\n  },\r\n  methods: {\r\n    back() {\r\n      this.togglePlayPage({ v: true });\r\n      setTimeout(() => {\r\n        this.$router.go(-1);\r\n      }, 1000);\r\n    },\r\n    // 跳转到专辑页面\r\n    clickPlayList(v) {\r\n      // console.log(\"还没做呢 跳个屁\");\r\n      // this.$router.push({path:'/songlistdetail',query: {id:v}});\r\n    },\r\n    // 获取所有歌曲的url\r\n    getAllSongUrl(item, save) {\r\n      // save => 保存的位置\r\n      item = item.join(\",\");\r\n      // tishi\r\n      this.$toast.loading({\r\n        type: \"loading\",\r\n        message: \"请稍等\",\r\n        forbidClick: true,\r\n        duration: 0,\r\n        loadingType: \"spinner\",\r\n      });\r\n      // 发起请求\r\n      this.axios({\r\n        methods: \"get\",\r\n        url: \"/song/url\",\r\n        params: {\r\n          id: item,\r\n        },\r\n      })\r\n        .then((result) => {\r\n          this.$toast.clear();\r\n          // console.log(\"所有歌曲的url => \", result);\r\n          // 整理数据 把顺序做成和listdata 一样\r\n          let trueData = [];\r\n          this.hotSongs.map((item) => {\r\n            result.data.data.map((v) => {\r\n              if (v.id == item.id) {\r\n                trueData.push(v);\r\n                return;\r\n              }\r\n            });\r\n          });\r\n          this[save] = trueData;\r\n        })\r\n        .catch((err) => {\r\n          this.$toast.clear();\r\n          console.log(\"err ==> \", err);\r\n        });\r\n    },\r\n    // 根据歌手id 获取相似歌手\r\n    getSimilarArtists(id) {\r\n      // 需要登录\r\n      // 需要登录\r\n      // 需要登录\r\n      let cookie = utils.getCookie(\"wyyc\");\r\n      // tishi\r\n      this.$toast.loading({\r\n        type: \"loading\",\r\n        message: \"发送中\",\r\n        forbidClick: true,\r\n        duration: 0,\r\n        loadingType: \"spinner\",\r\n      });\r\n      // 发起请求\r\n      this.axios({\r\n        methods: \"get\",\r\n        url: \"/simi/artist\",\r\n        params: {\r\n          id,\r\n          cookie,\r\n        },\r\n      })\r\n        .then((result) => {\r\n          this.$toast.clear();\r\n          this.similarArtistsData = [];\r\n          // 就放2个\r\n          for (let i = 0; i < 2; i++) {\r\n            this.similarArtistsData.push(result.data.artists[i]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.$toast.clear();\r\n          console.log(\"err ==> \", err);\r\n        });\r\n    },\r\n    // 根据歌手id 获取所有mv\r\n    getAllVideoById(id) {\r\n      // tishi\r\n      this.$toast.loading({\r\n        type: \"loading\",\r\n        message: \"发送中\",\r\n        forbidClick: true,\r\n        duration: 0,\r\n        loadingType: \"spinner\",\r\n      });\r\n      // 发起请求\r\n      // 这个也可以做懒加载 下次一定\r\n      // 这个也可以做排序 没写 但是有 order 淦\r\n      // 默认10个\r\n      this.axios({\r\n        methods: \"get\",\r\n        url: \"/artist/mv\",\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n        .then((result) => {\r\n          this.$toast.clear();\r\n          this.allVideoData = result.data.mvs;\r\n        })\r\n        .catch((err) => {\r\n          this.$toast.clear();\r\n          console.log(\"err ==> \", err);\r\n        });\r\n    },\r\n    // 根据歌手id 获取歌手全部的专辑\r\n    getPlayListById(id) {\r\n      // tishi\r\n      this.$toast.loading({\r\n        type: \"loading\",\r\n        message: \"发送中\",\r\n        forbidClick: true,\r\n        duration: 0,\r\n        loadingType: \"spinner\",\r\n      });\r\n      // 发起请求\r\n      // 这个也可以做懒加载 下次一定\r\n      // 这个也可以做排序 没写 但是有 order 淦\r\n      // 默认30个\r\n      this.axios({\r\n        methods: \"get\",\r\n        url: \"/artist/album\",\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n        .then((result) => {\r\n          this.$toast.clear();\r\n          // console.log(result);\r\n          result.data.hotAlbums.map((item) => {\r\n            item.pt = utils.getLocalTime(item.publishTime);\r\n          });\r\n          this.allPlayList = result.data.hotAlbums;\r\n        })\r\n        .catch((err) => {\r\n          this.$toast.clear();\r\n          console.log(\"err ==> \", err);\r\n        });\r\n    },\r\n    // 根据歌手id 获取歌手全部歌曲(50首 做懒加载)\r\n    getAllSongById(id) {\r\n      // tishi\r\n      this.$toast.loading({\r\n        type: \"loading\",\r\n        message: \"发送中\",\r\n        forbidClick: true,\r\n        duration: 0,\r\n        loadingType: \"spinner\",\r\n      });\r\n      // 发起请求\r\n      // 可以做排序 下次一定\r\n      // order : hot ,time 按照热门或者时间排序\r\n      // limit: 取出歌单数量 , 默认为 50\r\n      // offset: 偏移数量 , 用于分页 , 如 :( 评论页数 -1)*50, 其中 50 为 limit 的值\r\n      this.axios({\r\n        methods: \"get\",\r\n        url: \"/artist/songs\",\r\n        params: {\r\n          id,\r\n          order: \"hot\",\r\n          limit: 50,\r\n        },\r\n      })\r\n        .then((result) => {\r\n          this.$toast.clear();\r\n          // return\r\n          // 整理数据\r\n          let songId = [];\r\n          // 保存歌曲id\r\n          result.data.songs.map((item) => {\r\n            // 判断要不要在歌名后面加括号\r\n            if (item.alia.length == 0) {\r\n              item.isAlia = false;\r\n            } else {\r\n              item.isAlia = true;\r\n            }\r\n            // 整理 多位歌手\r\n            item.art = \"\";\r\n            item.artsss = [];\r\n            if (item.ar.length > 1) {\r\n              item.ar.map((i) => {\r\n                item.art += i.name + \"/\";\r\n                item.artsss.push(i);\r\n              });\r\n            } else {\r\n              item.artsss.push(item.ar[0]);\r\n              item.art = item.ar[0].name;\r\n            }\r\n            item.art = item.art.slice(0, -1);\r\n            //\r\n            item.imgUrl = item.al.picUrl;\r\n            //\r\n            songId.push(item.id);\r\n          });\r\n          this.allSongs = result.data.songs;\r\n          this.getAllSongUrl(songId, \"allSongUrlData\");\r\n        })\r\n        .catch((err) => {\r\n          this.$toast.clear();\r\n          console.log(\"err ==> \", err);\r\n        });\r\n    },\r\n    // 根据歌手id 获得歌手部分信息和热门歌曲\r\n    getInfoById(id) {\r\n      // tishi\r\n      this.$toast.loading({\r\n        type: \"loading\",\r\n        message: \"发送中\",\r\n        forbidClick: true,\r\n        duration: 0,\r\n        loadingType: \"spinner\",\r\n      });\r\n      // 发起请求\r\n      this.axios({\r\n        methods: \"get\",\r\n        url: \"/artists\",\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n        .then((result) => {\r\n          this.$toast.clear();\r\n          this.artist = result.data.artist;\r\n          // 只拿10首 热门歌曲\r\n          // 保存热门歌曲\r\n          let arr = [];\r\n          if (result.data.hotSongs.length < 10) {\r\n            // console.log(\"还有十首歌都没有的歌手？\");\r\n          }\r\n          for (let i = 0; i < 10; i++) {\r\n            arr.push(result.data.hotSongs[i]);\r\n          }\r\n          // 整理数据\r\n          let songId = [];\r\n          // 保存歌曲id\r\n          arr.map((item) => {\r\n            // 判断要不要在歌名后面加括号\r\n            if (item.alia.length == 0) {\r\n              item.isAlia = false;\r\n            } else {\r\n              item.isAlia = true;\r\n            }\r\n            // 整理 多位歌手\r\n            item.art = \"\";\r\n            item.artsss = [];\r\n            if (item.ar.length > 1) {\r\n              item.ar.map((i) => {\r\n                item.art += i.name + \"/\";\r\n                item.artsss.push(i);\r\n              });\r\n            } else {\r\n              item.artsss.push(item.ar[0]);\r\n              item.art = item.ar[0].name;\r\n            }\r\n            item.art = item.art.slice(0, -1);\r\n            //\r\n            item.imgUrl = item.al.picUrl;\r\n            //\r\n            songId.push(item.id);\r\n          });\r\n          this.hotSongs = arr;\r\n          this.getAllSongUrl(songId, \"songUrlData\");\r\n        })\r\n        .catch((err) => {\r\n          this.$toast.clear();\r\n          console.log(\"err ==> \", err);\r\n        });\r\n    },\r\n    // 开启playpage\r\n    togglePlayPage(v) {\r\n      this.$store.commit(\"togglePlayPage\", v);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.singerdetail {\r\n  width: 100%;\r\n  height: calc(100%);\r\n  background-color: red;\r\n  // 标题\r\n  /deep/ .van-nav-bar .van-icon {\r\n    color: #d2d2d2;\r\n  }\r\n  /deep/ .van-nav-bar {\r\n    background-color: rgba(120, 120, 120, 0);\r\n  }\r\n  /deep/ .van-hairline--bottom::after {\r\n    border: none;\r\n  }\r\n  // 背景\r\n  .bg {\r\n    height: 300px;\r\n    width: 100%;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-color: aqua;\r\n  }\r\n  // 内容\r\n  .content-box {\r\n    color: #fff;\r\n    position: relative;\r\n    left: 0;\r\n    top: -100px;\r\n    width: 100%;\r\n    .singer-info-box {\r\n      // background-color: rgba(255,255,255, 0.5);\r\n      padding: 20px;\r\n      height: 40px;\r\n      .singer-info {\r\n        width: calc(100% - 140px);\r\n        text-align: left;\r\n        .singer-name {\r\n          line-height: 25px;\r\n          font-size: 18px;\r\n          font-weight: bold;\r\n        }\r\n        .singer-fans {\r\n          line-height: 15x;\r\n          font-size: 12px;\r\n        }\r\n      }\r\n      .btn-sub {\r\n        width: 100px;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        // background-color: yellow;\r\n      }\r\n    }\r\n    .content-item {\r\n      background-color: #000;\r\n      border-top-left-radius: 15px;\r\n      border-top-right-radius: 15px;\r\n      overflow: hidden;\r\n      // 主页\r\n      .hot-box-title,\r\n      .singer-introduction-title,\r\n      .similar-artists-title {\r\n        text-align: center;\r\n        padding: 10px;\r\n        font-size: 18px;\r\n      }\r\n      // 近期热门\r\n      .hot-box {\r\n        background-color: rgb(21, 21, 21);\r\n        .songlist-item {\r\n          padding: 10px;\r\n          height: 40px;\r\n          // background-color: aqua;\r\n          text-align: left;\r\n          .songlist-count {\r\n            width: 25px;\r\n            height: 40px;\r\n            margin-right: 10px;\r\n            font-size: 24px;\r\n            line-height: 40px;\r\n            text-align: center;\r\n            color: #b4b4b4;\r\n          }\r\n          .songlist-item-detail {\r\n            width: calc(100% - 115px);\r\n            -webkit-line-clamp: 1;\r\n            display: -webkit-box;\r\n            -webkit-box-orient: vertical;\r\n            overflow: hidden;\r\n          }\r\n          .song-name {\r\n            font-size: 16px;\r\n            height: 20px;\r\n            line-height: 20px;\r\n            -webkit-line-clamp: 1;\r\n            display: -webkit-box;\r\n            -webkit-box-orient: vertical;\r\n            overflow: hidden;\r\n          }\r\n          .song-singer {\r\n            color: #b4b4b4;\r\n            font-size: 12px;\r\n            height: 20px;\r\n            line-height: 20px;\r\n            -webkit-line-clamp: 1;\r\n            display: -webkit-box;\r\n            -webkit-box-orient: vertical;\r\n            overflow: hidden;\r\n          }\r\n          .icon-box {\r\n            color: #b4b4b4;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-items: center;\r\n          }\r\n          .tv-icon,\r\n          .function-icon {\r\n            height: 40px;\r\n            width: 30px;\r\n            font-size: 25px;\r\n            line-height: 40px;\r\n            text-align: center;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-items: center;\r\n          }\r\n          .tv-icon {\r\n            margin-right: 20px;\r\n          }\r\n        }\r\n      }\r\n      // 歌手简介\r\n      .singer-introduction {\r\n        margin-top: 10px;\r\n        background-color: rgb(21, 21, 21);\r\n        .singer-introduction-content {\r\n          padding: 0 20px 20px 20px;\r\n          text-align: left;\r\n          color: #b4b4b4;\r\n        }\r\n      }\r\n      // 相似艺人\r\n      .similar-artists {\r\n        margin-top: 10px;\r\n        background-color: rgb(21, 21, 21);\r\n        .similar-artists-box {\r\n          .similar-artists-item {\r\n            // background-color: red;\r\n            padding: 20px;\r\n            width: calc(50% - 40px);\r\n            color: white;\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            // justify-items: center;\r\n            align-items: center;\r\n            .s-a-img {\r\n              width: 100%;\r\n              height: 60px;\r\n              // border-radius: 50%;\r\n              background-color: #000;\r\n              position: relative;\r\n              padding: 10px;\r\n              div {\r\n                position: absolute;\r\n                left: 50%;\r\n                transform: translate(-50%);\r\n                width: 60px;\r\n                height: 60px;\r\n                background-size: cover;\r\n                border-radius: 50%;\r\n                overflow: hidden;\r\n              }\r\n            }\r\n            .s-a-name {\r\n              background-color: #000;\r\n              width: 100%;\r\n              font-size: 16px;\r\n\r\n              -webkit-line-clamp: 1;\r\n              display: -webkit-box;\r\n              -webkit-box-orient: vertical;\r\n              overflow: hidden;\r\n            }\r\n            .s-a-fans {\r\n              background-color: #000;\r\n              width: 100%;\r\n              font-size: 14px;\r\n              color: #b4b4b4;\r\n            }\r\n            .s-a-sub {\r\n              background-color: #000;\r\n              width: 100%;\r\n              padding: 20px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 全部歌曲\r\n      .all-song-box {\r\n        background-color: rgb(21, 21, 21);\r\n        .songlist-item {\r\n          padding: 10px;\r\n          height: 40px;\r\n          // background-color: aqua;\r\n          text-align: left;\r\n          .songlist-count {\r\n            width: 25px;\r\n            height: 40px;\r\n            margin-right: 10px;\r\n            font-size: 24px;\r\n            line-height: 40px;\r\n            text-align: center;\r\n            color: #b4b4b4;\r\n          }\r\n          .songlist-item-detail {\r\n            width: calc(100% - 115px);\r\n            -webkit-line-clamp: 1;\r\n            display: -webkit-box;\r\n            -webkit-box-orient: vertical;\r\n            overflow: hidden;\r\n          }\r\n          .song-name {\r\n            font-size: 16px;\r\n            height: 20px;\r\n            line-height: 20px;\r\n            -webkit-line-clamp: 1;\r\n            display: -webkit-box;\r\n            -webkit-box-orient: vertical;\r\n            overflow: hidden;\r\n          }\r\n          .song-singer {\r\n            color: #b4b4b4;\r\n            font-size: 12px;\r\n            height: 20px;\r\n            line-height: 20px;\r\n            -webkit-line-clamp: 1;\r\n            display: -webkit-box;\r\n            -webkit-box-orient: vertical;\r\n            overflow: hidden;\r\n          }\r\n          .icon-box {\r\n            color: #b4b4b4;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-items: center;\r\n          }\r\n          .tv-icon,\r\n          .function-icon {\r\n            height: 40px;\r\n            width: 30px;\r\n            font-size: 25px;\r\n            line-height: 40px;\r\n            text-align: center;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-items: center;\r\n          }\r\n          .tv-icon {\r\n            margin-right: 20px;\r\n          }\r\n        }\r\n      }\r\n      // 专辑\r\n      .album-box {\r\n        .album-item {\r\n          padding: 10px 20px;\r\n          background-color: rgb(21, 21, 21);\r\n          .album-img {\r\n            width: 60px;\r\n            height: 60px;\r\n            margin-right: 20px;\r\n            overflow: hidden;\r\n            background-size: cover;\r\n          }\r\n          .album-info {\r\n            width: calc(100% - 120px);\r\n            text-align: left;\r\n            height: 60px;\r\n            .album-name {\r\n              line-height: 30px;\r\n              font-size: 16px;\r\n              -webkit-line-clamp: 1;\r\n              display: -webkit-box;\r\n              -webkit-box-orient: vertical;\r\n              overflow: hidden;\r\n            }\r\n            .album-date,\r\n            .album-count {\r\n              font-size: 12px;\r\n              line-height: 20px;\r\n              color: #b4b4b4;\r\n            }\r\n            .album-date {\r\n              margin-right: 4px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 视频\r\n      .video-box {\r\n        .video-item {\r\n          padding: 10px 20px;\r\n          .video-img {\r\n            width: 120px;\r\n            height: 80px;\r\n            background-color: aqua;\r\n            margin-right: 20px;\r\n            background-size: cover;\r\n            overflow: hidden;\r\n            border-radius: 15px;\r\n            position: relative;\r\n            .video-play-count {\r\n              position: absolute;\r\n              right: 5px;\r\n              top: 0;\r\n            }\r\n          }\r\n          .video-info {\r\n            width: calc(100% - 140px );\r\n            color: white;\r\n            text-align: left;\r\n            .video-name {\r\n              line-height: 30px;\r\n              font-size: 16px;\r\n              -webkit-line-clamp: 1;\r\n              display: -webkit-box;\r\n              -webkit-box-orient: vertical;\r\n              overflow: hidden;\r\n            }\r\n            .video-date {\r\n              font-size: 12px;\r\n              color: #b4b4b4;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Singerdetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Singerdetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Singerdetail.vue?vue&type=template&id=88a35218&scoped=true&\"\nimport script from \"./Singerdetail.vue?vue&type=script&lang=js&\"\nexport * from \"./Singerdetail.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Singerdetail.vue?vue&type=style&index=0&id=88a35218&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"88a35218\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}